cmdhistory=["(read-hyg)" "(re-matches bayer-flamsteed-pattern \\"Kap2Scl\\")" "(read-hyg)" "(re-matches bayer-flamsteed-pattern \\"24The And\\")" "(re-matches bayer-flamsteed-pattern \\"24The5And\\")" "(re-matches bayer-flamsteed-pattern \\"\\")" "(read-hyg)" "(read-messier)" "(read-hyg)" "(read-messier)" "constellations" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(fullscaler {\:x -180.0 \:y -90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(fullscaler {\:x -180.0 \:y -90})" "(fullscaler {\:x -90.0 \:y -90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(fullscaler {\:x -90.0 \:y -90})" "(fullscaler {\:x -180.0 \:y -90})" "(fullscaler {\:x -180.0 \:y 90})" "(* 2 8.89)" "(- 20.0 8.89)" "(fullscaler {\:x -180.0 \:y 90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(read-messier)" "(macroexpand-1 '(with-graphics-context g\\n    (fill-colored-rect 0 0 720 360 (color-by-name \:black))))" "(-main)" "chart-frame" "(fullscaler {\:x -180.0 \:y 90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(-main)" " (for [x (range 0 1440) y (range 0 720)]\\n    [x y])" "  (for [x (range 0 1440 72) y (range 0 720 72)]\\n    [x y])" "(-main)" "(diameter 4 6)" "(diameter -1 6)" "(diameter -14 6)" "(diameter -26 6)" "(read-messier)" "(-main)" "(take 10 stars)" "(read-hyg)" "(take 10 stars)" "(take 10 (reverse stars))" "(count stars)" "(count (filter (mag-filter 2) stars)" "(count (filter (mag-filter 2) stars))" "(count (filter (mag-filter 3) stars))" "(count (filter (mag-filter 4) stars))" "(count (filter (mag-filter 5) stars))" "(count (filter (mag-filter 6) stars))" "(-main)" "(color-by-spectral-type \\"\\")" "(color-by-spectral-type nil)" "(color-by-spectral-type \\"X\\")" "(color-by-spectral-type \\"a\\")" "(-main)" "(filter (common-name-filter \\"Vega\\") star-catalog)" "(filter (common-name-filter \\"Mir.?\\") star-catalog)" "(filter (common-name-filter \\"Mir.+\\") star-catalog)" "(scaler 45 45)" "(scaler [45 45])" "(scaler [45.0 45.0])" "(scaler [12 45])" "(scaler [12.0 45.0])" "(scaler [12.0 30.0])" "(scaler [12.0 -90.0])" "(scaler [0 -90.0])" "(-main)" "(scaler [0 -90.0])" "(scaler [0 90.0])" "(relative-coordinates [0 90.0])" "(relative-coordinates [12 90.0])" "(relative-coordinates [12 -90.0])" "(user-coordinates [0.5 0.0])" "(user-coordinates [0.5 0])" "(user-coordinates [1 0.0])" "(user-coordinates [1 1])" "(user-coordinates [1 0])" "(scaler [0 90.0])" "(- 90 -90)" "(scaler [0 90.0])" "(user-coordinates (relative-coordinates [0 90.0]))" "(user-coordinates (relative-coordinates [0 0.0]))" "(scaler [0 90.0])" "(user-coordinates (relative-coordinates [0 90.0]))" "(user-coordinates (relative-coordinates [12.0 90.0]))" "(scaler [12.0 90.0])" "(scale [12.0 90.0])" "(-main)" "(* 2 2880)" "(-main)" "(into {} (map \:type messier-catalog))" "(map \:type messier-catalog)" "(into {} (map \:type messier-catalog))" "(group-by (juxt \:type \:detailed-type) messier-catalog)" "(keys (group-by (juxt \:type \:detailed-type) messier-catalog))" "(-main)" "(keys (group-by (juxt \:type \:detailed-type) deep-sky-catalog))" "(-main)" "(key-stroke java.awt.event.KeyEvent/VK_UP)" "(javax.swing.KeyStroke/getKeyStroke java.awt.event.KeyEvent/VK_UP)" "(type java.awt.event.KeyEvent/VK_UP)" "(type (int java.awt.event.KeyEvent/VK_UP))" "(type 0)" "(javax.swing.KeyStroke/getKeyStroke java.awt.event.KeyEvent/VK_UP)" "(javax.swing.KeyStroke/getKeyStroke (int java.awt.event.KeyEvent/VK_UP))" "(-main)" "(javax.swing.KeyStroke/getKeyStroke (int java.awt.event.KeyEvent/VK_UP) 0)" "(javax.swing.KeyStroke/getKeyStroke java.awt.event.KeyEvent/VK_UP 0)" "(-main)" "(parse-messier-number \\"M17\\")" "(take 1 (read-messier))" "(take 3 (read-messier))" "(take 3 (read-hyg))" "(take 8 (read-hyg))" "(take 8 (map \:constellation (filter \:constellation (read-hyg))))" "(take 100 (map \:constellation (filter \:constellation (read-hyg))))" "(into {} (map \:constellation (filter \:constellation (read-hyg))))" "(into [] (map \:constellation (filter \:constellation (read-hyg))))" "(def dso-catalog (read-dso))" "(take 1 dso-catalog)" "(take 5 dso-catalog)" "(def dso-catalog (read-dso))" "(take 5 dso-catalog)" "(keys (group-by \:type dso-catalog))" "(take 5 (filter \#(\= (\:type %) \\"PD\\") dso-catalog))" "(take 5 (filter \#(\= (\:type %) \\"?\\") dso-catalog))" "(count (filter \#(\= (\:type %) \\"?\\") dso-catalog))" "(count (filter \#(\= (\:type %) \\"PD\\") dso-catalog))" "(count (filter \#(\= (\:ngc %) \\"PD\\") dso-catalog))" "(count (filter \#(\= (\:messier %) \\"PD\\") dso-catalog))" "(count (filter \#(\:messier %) dso-catalog))" "(count (filter \#(\:ngc %) dso-catalog))" "(count (filter \#(\:common-name %) dso-catalog))" "(def dso-catalog (read-dso))" "(count (filter \#(\:common-name %) dso-catalog))" "(count (filter (mag-filter 6) dso-catalog))" "(count (filter \#(\= (\:mag %) \\"\\") dso-catalog))" "(count (filter \#(\= (\:mag %) nil) dso-catalog))" "(def dso-catalog (read-dso))" "(count (filter \#(\= (\:mag %) nil) dso-catalog))" "(count (filter (mag-filter 6) dso-catalog))" "(count (filter (mag-filter 8) dso-catalog))" "(count (filter (mag-filter 7) dso-catalog))" "(count (filter (mag-filter 9) dso-catalog))" "(count (filter (mag-filter 10) dso-catalog))" "(count (filter (mag-filter 11) dso-catalog))" "(count (filter (mag-filter 12) dso-catalog))" "(count (filter (mag-filter 13) dso-catalog))" "(seq \\"\\")" "(seq ())" "(def hyg-catalog (read-hyg))" "(count \#(\:constellation %) hyg-catalog)" "(count (filter \#(\:constellation %) hyg-catalog))" "(count (filter \#(\:c-constellation %) hyg-catalog))" "(def hyg-catalog (read-hyg))" "(count (filter \#(\:c-constellation %) hyg-catalog))" "(count (filter \#(\:constellation %) hyg-catalog))" "(count (filter \#(\:bayer %) hyg-catalog))" "(count (filter \#(\:c-bayer %) hyg-catalog))" "(count (filter \#(\:c-flamsteed %) hyg-catalog))" "(count (filter \#(\:flamsteed %) hyg-catalog))" "(keys (group-by \:c-bayer (filter \#(\:c-bayer %) hyg-catalog)))" "(keys (group-by \:bayer (filter \#(\:bayer %) hyg-catalog)))" "(def hyg-catalog (read-hyg))" "(keys (group-by \:bayer-superscript (filter \#(\:bayer-superscript %) hyg-catalog)))" "(keys (group-by \:bayer-subscript (filter \#(\:bayer-subscript %) hyg-catalog)))" "(keys (group-by \:c-flamsteed (filter \#(\:c-flamsteed %) hyg-catalog)))" "(sort (keys (group-by \:c-flamsteed (filter \#(\:c-flamsteed %) hyg-catalog))))" "(sort (keys (group-by \:var (filter \#(\:var %) hyg-catalog))))" "(count (filter \#(\:c-constellation %) hyg-catalog))" "(count (filter \#(\:constellation %) hyg-catalog))" "(sort (keys (group-by \:c-constellation (filter \#(\:c-constellation %) hyg-catalog))))" "(count (filter \#(\= (\:c-constellation %) \\"A\\") hyg-catalog))" "(count (filter \#(\= (\:c-constellation %) \\"B\\") hyg-catalog))" "(map \:id (filter \#(\= (\:c-constellation %) \\"B\\") hyg-catalog))" "(map \:hyg-id (filter \#(\= (\:c-constellation %) \\"B\\") hyg-catalog))" "(map \:hyg-id (filter \#(\= (\:c-constellation %) \\"A\\") hyg-catalog))" "(def hyg-catalog (read-hyg))" "(map \:hyg-id (filter \#(\= (\:c-constellation %) \\"A\\") hyg-catalog))" "(map \:hyg-id (filter \#(\= (\:constellation %) \\"A\\") hyg-catalog))" "(def hyg-catalog (read-hyg))" "(count (filter \#(\:lum %) hyg-catalog))" "(count hyg-catalog))" "(count hyg-catalog)" "(-main)" "(deg-to-rad 0)" "(deg-to-rad 90)" "(scale [(deg-to-rad 315) -(deg-to-rad 90)])" "(-main)" "(equirectangular-scale [(deg-to-rad 90)(deg-to-rad 90)])" "(equirectangular-scale [(deg-to-rad 180)(deg-to-rad 90)])" "(relative-coordinates (deg-to-rad 180)(deg-to-rad 90))" "(relative-coordinates [(deg-to-rad 180)(deg-to-rad 90)])" "(relative-coordinates [(deg-to-rad 360)(deg-to-rad 90)])" "(relative-coordinates [(deg-to-rad 360)(deg-to-rad 0)])" "(relative-coordinates [(deg-to-rad 0)(deg-to-rad 0)])" "(relative-coordinates [(deg-to-rad 0)(deg-to-rad -90)])" "(user-coordinates [1 1])" "(user-coordinates [0 0])" "(-main)" "(load-hyg-catalog)" "(count star-catalog)" "(count (filter (ra-dec-filter [0.0 0.0] [360.0 90.0]) star-catalog))" "(count (filter (rad-ra-dec-filter [0.0 0.0] [(* 2 pi) (/ 2 pi)]) star-catalog))" "(use org.soulspace.clj.math.java-math)" "(use [org.soulspace.clj.math.java-math])" "(require [org.soulspace.clj.math.java-math])" "(count (filter (rad-ra-dec-filter [0.0 0.0] [(* 2 pi) (/ 2 pi)]) star-catalog))" "(count (filter (rad-ra-dec-filter [0.0 0.0] [(* 2 pi) (/ 2 pi)]) (get-stars)))" "(count (filter (ra-dec-filter [0.0 0.0] [360.0 90.0]) (get-stars)))" "(count (filter (rad-ra-dec-filter [0.0 0.0] [(* 2 pi) (/ 2 pi)]) (get-stars)))" "(take 2 (get-stars))" "(drop 10000 (take 2 (get-stars)))" "(count (filter (rad-ra-dec-filter [0.0 0.0] [(* 2 pi) (/ 2 pi)]) (get-stars)))" "(count (filter (ra-dec-filter [0.0 0.0] [360.0 90.0]) star-catalog))" "(reduce max 0 (map \:ra-rad (get-stars)))" "(reduce max 0 (map \:dec-rad (get-stars)))" "(/ 2 pi)" "(/ pi 2)" "(count (filter (rad-ra-dec-filter [0.0 0.0] [(* 2 pi) (/ pi 2)]) (get-stars)))" "(count (filter (ra-dec-filter [0.0 0.0] [360.0 90.0]) star-catalog))" "(-main)" "(load-dso-catalog)" "(-main)" "(count (filter \:type (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:galaxy) (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:open-cluster) (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:globular-cluster) (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:emission-nebula) (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:dark-nebula) (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:planetary-nebula) (get-deep-sky-objects)))" "(count (filter \#(\= (\:type %) \:supernova-remnant) (get-deep-sky-objects)))" "(count (filter \:display-mag (get-deep-sky-objects)))" "(into {} (\:cat (get-deep-sky-objects)))" "(into {} (map \:cat (get-deep-sky-objects)))" "(into {} (map \:cat1 (get-deep-sky-objects)))" "(map \:cat1 (get-deep-sky-objects))" "(doc into)" "(into {} (map \:cat (get-deep-sky-objects)))" "(into {} (map \:cat1 (get-deep-sky-objects)))" "(into \#{} (map \:cat1 (get-deep-sky-objects)))" "(into \#{} (map \:cat2 (get-deep-sky-objects)))" "(count (filter \#(\= (\:cat1 %) \\"ESO\\") (get-deep-sky-objects)))" "(count (filter \#(\= (\:cat1 %) \\"PGC\\") (get-deep-sky-objects)))" "(count (filter \#(\= (\:cat1 %) \\"M\\") (get-deep-sky-objects)))" "(count (filter \#(\= (\:cat1 %) \\"NGC\\") (get-deep-sky-objects)))" "(count (filter \#(\= (\:cat1 %) \\"IC\\") (get-deep-sky-objects)))" "(-main)" "(count (get-deep-sky-objects))" "(count \:display-mag (get-deep-sky-objects)))" "(count (filter \:display-mag (get-deep-sky-objects)))" "(map \:common-name (filter \:display-mag (get-deep-sky-objects)))" "(map \:common-name (filter \:common-name (get-deep-sky-objects)))" "(-main)" "(filter \#(\= (\:common-name %) \\"Winneke 4\\") (get-deep-sky-objects))" "(filter \#(\= (\:common-name %) \\"Winnecke 4\\") (get-deep-sky-objects))" "(-main)" "(filter \#(\= (\:common-name %) \\"Winnecke 4\\") (get-deep-sky-objects))" "(-main)" "(count (get-deep-sky-objects))" "(into \#{} (\:mag (get-deep-sky-objects)))" "(into \#{} (map \:mag (get-deep-sky-objects)))" "(sort (into \#{} (map \:mag (get-deep-sky-objects))))" "(-main)" "(into \#{} (map \:messier (get-deep-sky-objects)))" "(filter \:messier (get-deep-sky-objects))" "(-main)" "(filter \#(\= (\:messier %) 1) (get-deep-sky-objects))" "(filter \#(\= (\:messier %) \\"1\\") (get-deep-sky-objects))" "(-main)" "(def us (user-coordinate-transformer 360 180))" "(def ur (reverse-user-coordinate-transformer 360 180))" "(us [0.5 0.5])" "(ur [180.0 90.0])" "(us [0.25 0.5])" "(ur [270.0 90.0])" "(def rs (relative-scale-transformer [0.0 -90.0][360.0 90.0]))" "(def rr (reverse-relative-scale-transformer [0.0 -90.0][360.0 90.0]))" "(rs [45 45])" "(rr [0.125 0.75])" "(rr [0.125 0.25])" "(def rr (reverse-relative-scale-transformer [0.0 -90.0][360.0 90.0]))" "(rr [0.125 0.25])" "(def rr (reverse-relative-scale-transformer 0.0 -90.0 360.0 90.0))" "(rr [0.125 0.25])" "(def rr (reverse-relative-scale-transformer [0.0 -90.0][360.0 90.0]))" "(rr [0.125 0.25])" "(def rr (reverse-relative-scale-transformer [0.0 -90.0][360.0 90.0]))" "(rr [0.125 0.25])" "(rr [0.125 0.75])" "(-main)" "(reverse-equirectangular-scale [400 400])" "(reverse-user-coordinate-transformer [400 400])" "(find-object-by-coordinates [1 1] (get-stars))" "(find-object-by-coordinates [1 1] (get-deep-sky-objects))" "(find-object-by-coordinates [2 2] (get-deep-sky-objects))" "(find-object-by-coordinates [5 1] (get-deep-sky-objects))" "(find-object-by-coordinates [5 1.1] (get-deep-sky-objects))" "(object-angular-distance [5 1.1] {\:ngc \\"7092\\", \:messier \\"39\\", \:constellation \:Cyg, \:mag 4.6, \:ra-rad 5.6382870212323075,\\n                                  \:type \:open-cluster, \:ra 21.53667, \:common-name \\"\\", \:size \\"32\\", \:dec-rad 0.8453210762049451, \:dec 48.43333})" "(object-angular-distance [5 1.1] {\:ngc \\"6341\\", \:messier \\"92\\", \:constellation \:Her, \:mag 6.5, \:ra-rad 4.5252024181082975, \:type \:globular-cluster, \:ra 17.285, \:common-name \\"\\", \:size \\"11.2\\", \:dec-rad 0.7528186258492457, \:dec 43.13333})" "(object-angular-distance [5 1] {\:ngc \\"6341\\", \:messier \\"92\\", \:constellation \:Her, \:mag 6.5, \:ra-rad 4.5252024181082975, \:type \:globular-cluster, \:ra 17.285, \:common-name \\"\\", \:size \\"11.2\\", \:dec-rad 0.7528186258492457, \:dec 43.13333})" "(object-angular-distance [5 1] {\:ngc \\"7092\\", \:messier \\"39\\", \:constellation \:Cyg, \:mag 4.6, \:ra-rad 5.6382870212323075,\\n                                \:type \:open-cluster, \:ra 21.53667, \:common-name \\"\\", \:size \\"32\\", \:dec-rad 0.8453210762049451, \:dec 48.43333})" "(-main)" "(date-to-julian-day (java.util.Date.))" "(java-date-to-julian-day (java.util.Date.))" "(TimeZone/getAvailableIDs (* 1 60 60 1000))" "(seq (TimeZone/getAvailableIDs (* 1 60 60 1000)))" "(SimpleTimeZone. 3600000 \\"CET\\")" "(TimeZone/getDefaultTimeZone)" "(TimeZone/getDefault)" "(seq (TimeZone/getAvailableIDs (* 0 60 60 1000)))" "(seq (TimeZone/getAvailableIDs (* 1 60 60 1000)))" "(seq (TimeZone/getAvailableIDs (* -1 60 60 1000)))" "(seq (TimeZone/getAvailableIDs))" "(GregorianCalendar.)" "(.getTime (GregorianCalendar.))" "(Date.)" "(-main)" "(start)" "(rectangular-user-coordinates [2 1][2 1])" "(rectangular-user-coordinates [2 1])" "(rectangular-user-coordinates [1 1])" "(rectangular-user-coordinates [0.3 0.3])" "(reverse-equirectangular-scale (equirectangular-scale [0.3 0.3]))" "(reverse-orthoscopic-scale (orthoscopic-scale [0.3 0.3]))" "(reverse-orthoscopic-scale (orthoscopic-scale [0.5 0.5]))" "(reverse-stereoscopic-scale (stereoscopic-scale [0.5 0.5]))" "(reverse-stereoscopic-scale (stereoscopic-scale [0.3 0.3]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0.5 0.5]))" "(north-pole-reverse-stereoscopic-projector (north-pole-stereoscopic-projector [0.5 0.5]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0.5 0.5]))" "(equatorial-reverse-orthoscopic-projector (equatorial-orthoscopic-projector [0.5 0.5]))" "(equatorial-reverse-orthoscopic-projector (equatorial-orthoscopic-projector [1 1]))" "(equatorial-reverse-orthoscopic-projector (equatorial-orthoscopic-projector [0 0]))" "(sqrt (+ (* 0 0) (* 0 0)))" "(equatorial-reverse-orthoscopic-projector (equatorial-orthoscopic-projector [0 0]))" "(equatorial-reverse-orthoscopic-projector (equatorial-orthoscopic-projector [1 1]))" "(equatorial-reverse-orthoscopic-projector (equatorial-orthoscopic-projector [0.5 0.5]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0 0]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0.1 0.1]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0.1 0.4]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0.1 0.7]))" "(north-pole-reverse-orthoscopic-projector (north-pole-orthoscopic-projector [0.1 0.4]))" "(north-pole-reverse-stereoscopic-projector (north-pole-stereoscopic-projector [0.1 0.4]))" "(-main)" "(filter \#(\= (\:con %) \\"CVn\\") (get-deep-sky-objects)" "(filter \#(\= (\:con %) \\"CVn\\") (get-deep-sky-objects))" "(filter \#(\= (\:con %) \\"Cnc\\") (get-deep-sky-objects))" "(filter \#(\= (\:constellation %) \\"Cnc\\") (get-deep-sky-objects))" "(filter \#(\= (\:constellation %) \:Cnc) (get-deep-sky-objects))" "(filter \#(\= (\:constellation %) \:CVn) (get-deep-sky-objects))" "(filter \#(\= (\:constellation %) \:Cvn) (get-deep-sky-objects))" "(filter \#(\= (\:constellation %) \:CNv) (get-deep-sky-objects))" "(filter \#(\= (\:constellation %) \:Cnv) (get-deep-sky-objects))" "(load-dso-catalog)" "(filter \:const (get-deep-sky-objects))" "(filter \:con (get-deep-sky-objects))" "(filter \:constellation (get-deep-sky-objects))" "(-main)" "(OrthoscopicStarCharImpl. (ref orthoscopic-chart-spec azimutal-panel-spec))" "(OrthoscopicStarCharImpl. (ref orthoscopic-chart-spec) (ref azimutal-panel-spec))" "(-main)" "(read-dso)" "(count (read-dso))" "(-main)" "(buffered-image (as-file \\"/home/soulman/devel/tmp/astro/textures/albers/moon.jpg\\"))" "(moon-dialog nil)" "(for [x (range 0 5) y (range 0 5)]\\n  [x y])" "(moon-dialog nil)" "moon-image" "(image-type \:rgb)" "(image-type \:argb)" "(image-type \:argb-pre)" "(image-type \:bgr)" "(image-type \:3byte-bgr)" "(moon-dialog nil)" "(projected-image moon-image (\:x-max map-panel-spec) (\:y-max map-panel-spec))" "(reverse-orthoscopic-scale [0 0])" "(reverse-orthoscopic-scale [90 90])" "(reverse-orthoscopic-scale [0 90])" "(reverse-orthoscopic-scale [180 90])" "(reverse-orthoscopic-scale [180 180])" "(reverse-orthoscopic-scale [179 179])" "(> (first (reverse-orthoscopic-scale [179 179])) 0)" "(< (first (reverse-orthoscopic-scale [179 179])) 0)" "(< (first (reverse-orthoscopic-scale [90 90])) 0)" "(reverse-orthoscopic-scale [90 90])" "(reverse-orthoscopic-scale [80 80])" "(reverse-orthoscopic-scale [100 80])" "(reverse-orthoscopic-scale [100 100])" "(reverse-orthoscopic-scale [120 120])" "(map deg-to-rad (reverse-orthoscopic-scale [120 120])" "(map deg-to-rad (reverse-orthoscopic-scale [120 120]))" "(map rad-to-deg (reverse-orthoscopic-scale [120 120]))" "(map rad-to-deg (reverse-orthoscopic-scale [100 100]))" "(map rad-to-deg (reverse-orthoscopic-scale [0 0]))" "(map int (map rad-to-deg (reverse-orthoscopic-scale [0 0])))" "(source-scale (reverse-orthoscopic-scale [100 100]))" "(source-scale [pi pi])" "(source-scale (reverse-orthoscopic-scale [100 100]))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [100 100])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [90 90])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [0 90])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [0 0])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [90 90])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [140 140])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [150 140])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [160 140])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [170 140])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [165 140])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [161 140])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [45 45])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [30 45])))" "(source-scale (reverse-orthoscopic-scale [30 30]))" "(source-scale (reverse-orthoscopic-scale [20 20]))" "(source-scale (reverse-orthoscopic-scale [25 25]))" "(source-scale (reverse-orthoscopic-scale [28 28]))" "(source-scale (reverse-orthoscopic-scale [29 29]))" "(source-scale (reverse-orthoscopic-scale [35 35]))" "(source-scale (reverse-orthoscopic-scale [45 45]))" "(source-scale (reverse-orthoscopic-scale [60 60]))" "(source-scale (reverse-orthoscopic-scale [90 60]))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [45 45])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [30 45])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [150 45])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [180 90])))" "(source-coordinates (source-scale (reverse-orthoscopic-scale [0 90])))" "(map rad-to-deg (reverse-orthoscopic-scale [0 0]))" "(map rad-to-deg (reverse-orthoscopic-scale [30 30]))" "(map rad-to-deg (reverse-orthoscopic-scale [150 150]))" "(map rad-to-deg (reverse-orthoscopic-scale [0 90]))" "(map rad-to-deg (reverse-orthoscopic-scale [90 0]))" "(map rad-to-deg (reverse-orthoscopic-scale [90 180]))" "(map rad-to-deg (reverse-orthoscopic-scale [0 90]))" "(map rad-to-deg (reverse-orthoscopic-scale [180 90]))" "(map rad-to-deg (reverse-orthographic-scale [180 90]))" "(-main)" "(+ 2 3)" "(take 10 (get-stars))" "(-main)"]
eclipse.preferences.version=1
