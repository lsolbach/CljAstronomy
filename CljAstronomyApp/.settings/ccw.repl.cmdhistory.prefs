cmdhistory=["(read-hyg)" "(re-matches bayer-flamsteed-pattern \\"Kap2Scl\\")" "(read-hyg)" "(re-matches bayer-flamsteed-pattern \\"24The And\\")" "(re-matches bayer-flamsteed-pattern \\"24The5And\\")" "(re-matches bayer-flamsteed-pattern \\"\\")" "(read-hyg)" "(read-messier)" "(read-hyg)" "(read-messier)" "constellations" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(fullscaler {\:x -180.0 \:y -90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(fullscaler {\:x -180.0 \:y -90})" "(fullscaler {\:x -90.0 \:y -90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(fullscaler {\:x -90.0 \:y -90})" "(fullscaler {\:x -180.0 \:y -90})" "(fullscaler {\:x -180.0 \:y 90})" "(* 2 8.89)" "(- 20.0 8.89)" "(fullscaler {\:x -180.0 \:y 90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(read-messier)" "(macroexpand-1 '(with-graphics-context g\\n    (fill-colored-rect 0 0 720 360 (color-by-name \:black))))" "(-main)" "chart-frame" "(fullscaler {\:x -180.0 \:y 90})" "(def fullscaler (scaler {\:x -180.0 \:y -90.0} {\:x 180.0 \:y 90.0}))" "(-main)" " (for [x (range 0 1440) y (range 0 720)]\\n    [x y])" "  (for [x (range 0 1440 72) y (range 0 720 72)]\\n    [x y])" "(-main)" "(diameter 4 6)" "(diameter -1 6)" "(diameter -14 6)" "(diameter -26 6)" "(read-messier)" "(-main)" "(take 10 stars)" "(read-hyg)" "(take 10 stars)" "(take 10 (reverse stars))" "(count stars)" "(count (filter (mag-filter 2) stars)" "(count (filter (mag-filter 2) stars))" "(count (filter (mag-filter 3) stars))" "(count (filter (mag-filter 4) stars))" "(count (filter (mag-filter 5) stars))" "(count (filter (mag-filter 6) stars))" "(-main)" "(color-by-spectral-type \\"\\")" "(color-by-spectral-type nil)" "(color-by-spectral-type \\"X\\")" "(color-by-spectral-type \\"a\\")" "(-main)" "(filter (common-name-filter \\"Vega\\") star-catalog)" "(filter (common-name-filter \\"Mir.?\\") star-catalog)" "(filter (common-name-filter \\"Mir.+\\") star-catalog)" "(scaler 45 45)" "(scaler [45 45])" "(scaler [45.0 45.0])" "(scaler [12 45])" "(scaler [12.0 45.0])" "(scaler [12.0 30.0])" "(scaler [12.0 -90.0])" "(scaler [0 -90.0])" "(-main)" "(scaler [0 -90.0])" "(scaler [0 90.0])" "(relative-coordinates [0 90.0])" "(relative-coordinates [12 90.0])" "(relative-coordinates [12 -90.0])" "(user-coordinates [0.5 0.0])" "(user-coordinates [0.5 0])" "(user-coordinates [1 0.0])" "(user-coordinates [1 1])" "(user-coordinates [1 0])" "(scaler [0 90.0])" "(- 90 -90)" "(scaler [0 90.0])" "(user-coordinates (relative-coordinates [0 90.0]))" "(user-coordinates (relative-coordinates [0 0.0]))" "(scaler [0 90.0])" "(user-coordinates (relative-coordinates [0 90.0]))" "(user-coordinates (relative-coordinates [12.0 90.0]))" "(scaler [12.0 90.0])" "(scale [12.0 90.0])" "(-main)" "(* 2 2880)" "(-main)" "(into {} (map \:type messier-catalog))" "(map \:type messier-catalog)" "(into {} (map \:type messier-catalog))" "(group-by (juxt \:type \:detailed-type) messier-catalog)" "(keys (group-by (juxt \:type \:detailed-type) messier-catalog))" "(-main)" "(keys (group-by (juxt \:type \:detailed-type) deep-sky-catalog))" "(-main)" "(key-stroke java.awt.event.KeyEvent/VK_UP)" "(javax.swing.KeyStroke/getKeyStroke java.awt.event.KeyEvent/VK_UP)" "(type java.awt.event.KeyEvent/VK_UP)" "(type (int java.awt.event.KeyEvent/VK_UP))" "(type 0)" "(javax.swing.KeyStroke/getKeyStroke java.awt.event.KeyEvent/VK_UP)" "(javax.swing.KeyStroke/getKeyStroke (int java.awt.event.KeyEvent/VK_UP))" "(-main)" "(javax.swing.KeyStroke/getKeyStroke (int java.awt.event.KeyEvent/VK_UP) 0)" "(javax.swing.KeyStroke/getKeyStroke java.awt.event.KeyEvent/VK_UP 0)" "(-main)" "(parse-messier-number \\"M17\\")" "(take 1 (read-messier))" "(take 3 (read-messier))" "(take 3 (read-hyg))" "(take 8 (read-hyg))" "(take 8 (map \:constellation (filter \:constellation (read-hyg))))" "(take 100 (map \:constellation (filter \:constellation (read-hyg))))" "(into {} (map \:constellation (filter \:constellation (read-hyg))))" "(into [] (map \:constellation (filter \:constellation (read-hyg))))" "(def dso-catalog (read-dso))" "(take 1 dso-catalog)" "(take 5 dso-catalog)" "(def dso-catalog (read-dso))" "(take 5 dso-catalog)" "(keys (group-by \:type dso-catalog))" "(take 5 (filter \#(\= (\:type %) \\"PD\\") dso-catalog))" "(take 5 (filter \#(\= (\:type %) \\"?\\") dso-catalog))" "(count (filter \#(\= (\:type %) \\"?\\") dso-catalog))" "(count (filter \#(\= (\:type %) \\"PD\\") dso-catalog))" "(count (filter \#(\= (\:ngc %) \\"PD\\") dso-catalog))" "(count (filter \#(\= (\:messier %) \\"PD\\") dso-catalog))" "(count (filter \#(\:messier %) dso-catalog))" "(count (filter \#(\:ngc %) dso-catalog))" "(count (filter \#(\:common-name %) dso-catalog))" "(def dso-catalog (read-dso))" "(count (filter \#(\:common-name %) dso-catalog))" "(count (filter (mag-filter 6) dso-catalog))" "(count (filter \#(\= (\:mag %) \\"\\") dso-catalog))" "(count (filter \#(\= (\:mag %) nil) dso-catalog))" "(def dso-catalog (read-dso))" "(count (filter \#(\= (\:mag %) nil) dso-catalog))" "(count (filter (mag-filter 6) dso-catalog))" "(count (filter (mag-filter 8) dso-catalog))" "(count (filter (mag-filter 7) dso-catalog))" "(count (filter (mag-filter 9) dso-catalog))" "(count (filter (mag-filter 10) dso-catalog))" "(count (filter (mag-filter 11) dso-catalog))" "(count (filter (mag-filter 12) dso-catalog))" "(count (filter (mag-filter 13) dso-catalog))" "(seq \\"\\")" "(seq ())" "(def hyg-catalog (read-hyg))" "(count \#(\:constellation %) hyg-catalog)" "(count (filter \#(\:constellation %) hyg-catalog))" "(count (filter \#(\:c-constellation %) hyg-catalog))" "(def hyg-catalog (read-hyg))" "(count (filter \#(\:c-constellation %) hyg-catalog))" "(count (filter \#(\:constellation %) hyg-catalog))" "(count (filter \#(\:bayer %) hyg-catalog))" "(count (filter \#(\:c-bayer %) hyg-catalog))" "(count (filter \#(\:c-flamsteed %) hyg-catalog))" "(count (filter \#(\:flamsteed %) hyg-catalog))" "(keys (group-by \:c-bayer (filter \#(\:c-bayer %) hyg-catalog)))" "(keys (group-by \:bayer (filter \#(\:bayer %) hyg-catalog)))" "(def hyg-catalog (read-hyg))" "(keys (group-by \:bayer-superscript (filter \#(\:bayer-superscript %) hyg-catalog)))" "(keys (group-by \:bayer-subscript (filter \#(\:bayer-subscript %) hyg-catalog)))" "(keys (group-by \:c-flamsteed (filter \#(\:c-flamsteed %) hyg-catalog)))" "(sort (keys (group-by \:c-flamsteed (filter \#(\:c-flamsteed %) hyg-catalog))))" "(sort (keys (group-by \:var (filter \#(\:var %) hyg-catalog))))" "(count (filter \#(\:c-constellation %) hyg-catalog))" "(count (filter \#(\:constellation %) hyg-catalog))" "(sort (keys (group-by \:c-constellation (filter \#(\:c-constellation %) hyg-catalog))))" "(count (filter \#(\= (\:c-constellation %) \\"A\\") hyg-catalog))" "(count (filter \#(\= (\:c-constellation %) \\"B\\") hyg-catalog))" "(map \:id (filter \#(\= (\:c-constellation %) \\"B\\") hyg-catalog))" "(map \:hyg-id (filter \#(\= (\:c-constellation %) \\"B\\") hyg-catalog))" "(map \:hyg-id (filter \#(\= (\:c-constellation %) \\"A\\") hyg-catalog))" "(def hyg-catalog (read-hyg))" "(map \:hyg-id (filter \#(\= (\:c-constellation %) \\"A\\") hyg-catalog))" "(map \:hyg-id (filter \#(\= (\:constellation %) \\"A\\") hyg-catalog))" "(def hyg-catalog (read-hyg))" "(count (filter \#(\:lum %) hyg-catalog))" "(count hyg-catalog))" "(count hyg-catalog)"]
eclipse.preferences.version=1
